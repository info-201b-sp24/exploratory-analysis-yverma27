iris_summary
iris_row_names <- rownames(iris)
iris_row_names
iris_col_names <- colnames(iris)
iris_col_names
iris_num_rows <- nrow(iris)
iris_num_rows
iris_num_cols <- ncol(iris)
iris_num_cols
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- rownames(iris)
iris_row_names
iris_col_names <- colnames(iris)
iris_col_names
iris_num_rows <- nrow(iris)
iris_num_rows
iris_num_cols <- ncol(iris)
iris_num_cols
iris_last_two_rows_and_cols <- tail(iris[, c((ncol(iris - 1):ncol(iris)))], 2)
iris_last_two_rows_and_cols
iris_last_two_rows_and_cols <- tail(iris[, -c(1:ncol(iris-2))], 2)
iris_last_two_rows_and_cols
iris_last_two_rows_and_cols <- iris[(nrow(iris)-1):nrow(iris), (ncol(iris)-1):ncol(iris)]
iris_last_two_rows_and_cols
library(tidyverse)
setwd("C:/Users/yuvik/OneDrive - UW/INFO 201 - SPR '24/INFO201/exploratory-analysis-yverma27")
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
View(dataset)
data_viz <- ggplot(dataset, aes(x = year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
line(title = "Frequency of Different Certifications Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
data_viz <- ggplot(dataset, aes(x = year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
labs(title = "Frequency of Different Certifications Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
View(data_viz)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
data_viz <- ggplot(dataset, aes(x = year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
labs(title = "Frequency of Different Certifications Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
data_viz <- ggplot(dataset, aes(x = year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
labs(title = "Frequency of Different Certifications Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
data_viz <- ggplot(dataset, aes(x = certificate)) +
geom_bar() +
labs(title = "Frequency of Different Certifications",
x = "Certification",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
updated_dataset <- na.omit(datset)
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
updated_dataset <- na.omit(dataset)
data_viz <- ggplot(updated_dataset, aes(x = certificate)) +
geom_bar() +
labs(title = "Frequency of Different Certifications",
x = "Certification",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
ggplot(dataset, aes(x = rating, y = votes, color = as.factor(year))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
dataviz <- ggplot(dataset, aes(x = rating, y = votes, color = as.factor(year))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
dataviz2 <- ggplot(dataset, aes(x = rating, y = votes, color = as.factor(year))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz2
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
dataviz2 <- ggplot(dataset, aes(x = rating, y = votes, color = as.factor(year))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz2
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
data_viz2 <- ggplot(dataset, aes(x = rating, y = votes, color = as.factor(year))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz2
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
data_viz2 <- ggplot(dataset, aes(x = rating, y = votes, color = as.factor(genre))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz2
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
updated_dataset <- na.omit(dataset)
data_viz2 <- ggplot(updated_dataset, aes(x = rating, y = votes, color = as.factor(genre))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Release Year") +
theme_minimal()
data_viz2
library(ggplot2)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
updated_dataset <- na.omit(dataset)
data_viz2 <- ggplot(updated_dataset, aes(x = rating, y = votes, color = as.factor(genre))) +
geom_point() +
labs(title = "Relationship between IMDb Ratings and Number of Votes",
x = "IMDb Rating",
y = "Number of Votes",
color = "Genre") +
theme_minimal()
data_viz2
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
frequency <- nrow(dataset)
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset <- updated_dataset %>%
mutate_(updated_year = extracted_year)
data_viz <- ggplot(updated_dataset, aes(x = certificate)) +
geom_bar() +
labs(title = "Frequency of Different Certifications",
x = "Certification",
y = "Frequency") +
theme_minimal()
data_viz
View(updated_dataset)
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
geom_point() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
geom_point() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal() +
ylim(0, 100000)
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
geom_point() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal() +
ylim(0, 10000)
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(updated_dataset2, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
geom_point() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal() +
ylim(7500, 10000)
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year,"(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = extracted_year)
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
frequency <- nrow(updated_dataset2)
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency, group = certificate, color = certificate)) +
geom_line() +
geom_point() +
labs(title = "Certification Frequency Over the Years",
x = "Year",
y = "Frequency") +
theme_minimal() +
ylim(7500, 10000)
data_viz
View(updated_dataset2)
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
# Calculate the frequency of movies for each year
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Number of Movies Released Each Year",
x = "Year",
y = "Frequency") +
theme_minimal()
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
# Calculate the frequency of movies for each year
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Number of Content Released Each Year",
x = "Year",
y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2025, by = 2))
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
# Calculate the frequency of movies for each year
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Number of Content Released Each Year",
x = "Year",
y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2024, by = 5))
data_viz
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
# Calculate the frequency of movies for each year
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released Each Year",
x = "Year",
y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2024, by = 5))
data_viz
data_viz
code = readLines("chart1_example.R")
code = readLines("chart1_example.R")
code = readLines("line_graph.R")
code = readLines("chart1_example.R")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
library(ggplot2)
library(dplyr)
library(stringr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released Each Year",
x = "Year",
y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2024, by = 5))
data_viz
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released on Netflix Each Year",
x = "Year",
y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2024, by = 5))
data_viz
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released on Netflix Each Year",
x = "Year",
y = "Number of Content") +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2024, by = 5))
data_viz
View(dataset)
View(updated_dataset)
arranged_data <- updated_dataset %>%
arrange(desc(rating))
arranged_data
View(arranged_data)
library(knitr)
View(yearly_frequency)
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released on Netflix Each Year",
x = "Year",
y = "Number of Content") +
theme_minimal() +
scale_x_continuous(breaks = seq(1932, 2024, by = 5))
data_viz
arranged_data <- updated_dataset %>%
arrange(desc(rating))
The data was collected by Kaggle user Tayyar Hussain, who aggregated it to facilitate data analysis projects related to streaming content on Netflix. The dataset compilation involved automated scripts to extract data from public databases such as IMDb, as well as with Netflix's publicly available information on their titles.
library(ggplot2)
library(dplyr)
library(stringr)
library(knitr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
extracted_year <- str_extract(updated_dataset$year, "(?<=\\()(\\d{4})")
updated_dataset2 <- updated_dataset %>%
mutate(release_year = as.integer(extracted_year))
yearly_frequency <- updated_dataset2 %>%
group_by(release_year) %>%
summarize(frequency = n())
data_viz <- ggplot(yearly_frequency, aes(x = release_year, y = frequency)) +
geom_line() +
geom_point() +
labs(title = "Amount of Content Released on Netflix Each Year",
x = "Year",
y = "Number of Content") +
theme_minimal() +
scale_x_continuous(breaks = seq(1932, 2024, by = 5))
data_viz
arranged_data <- updated_dataset %>%
arrange(desc(rating))
arranged_data
selected_data <- arranged_data %>%
select(title, year, certificate, genre, rating, votes) %>%
head(10)
kable(selected_data, caption = "Top 10 Movies by Rating")
setwd("C:/Users/yuvik/OneDrive - UW/INFO 201 - SPR '24/INFO201/exploratory-analysis-yverma27")
library(ggplot2)
library(dplyr)
library(knitr)
dataset <- read.csv("n_movies.csv")
updated_dataset <- na.omit(dataset)
arranged_data <- updated_dataset %>%
arrange(desc(rating))
arranged_data
selected_data <- arranged_data %>%
select(title, year, certificate, genre, rating, votes) %>%
head(10)
kable(selected_data, caption = "Top 10 Movies by Rating")
